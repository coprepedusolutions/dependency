name: Publish Changed AAR Modules

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  detect-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Eclipse Temurin 
          java-version: 17
          cache: gradle
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Set up GitHub Packages credentials
        run: |
          echo "USERNAME=${{ secrets.GITHUB_ACTOR }}" >> $GITHUB_ENV
          echo "TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Detect Changed Modules with build.gradle
        id: detect
        run: |
          echo "üîç Detecting changed modules with build.gradle..."
          CHANGED_MODULES=""
          for folder in $(git diff --name-only $(git rev-list --max-parents=0 HEAD) HEAD | awk -F/ '{print $1}' | sort -u); do
            if [ -f "$folder/build.gradle" ] || [ -f "$folder/build.gradle.kts" ]; then
              echo "üì¶ Found module: $folder"
              CHANGED_MODULES="$CHANGED_MODULES $folder"
            fi
          done

          CHANGED_MODULES=$(echo "$CHANGED_MODULES" | xargs) # clean whitespace
          echo "modules=$CHANGED_MODULES" >> $GITHUB_OUTPUT

      - name: Publish Changed Modules
        if: ${{ steps.detect.outputs.modules != '' }}
        run: |
          echo "üì¶ Modules to publish: $MODULES"
          for module in $MODULES; do
            echo "üöÄ Publishing $module..."
            ./gradlew ":$module:publishReleasePublicationToGitHubPackagesRepository" \
              || echo "‚ùå Failed to publish $module"
          done
        env:
          MODULES: ${{ steps.detect.outputs.modules }}
